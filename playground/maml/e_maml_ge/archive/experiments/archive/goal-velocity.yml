%YAML 1.2
---
config:
  # 8 gives better usage of i7 CPU.
  max_concurrent: 2
env:
  DISPLAY: ":1"
  PYTHONPATH: $HOME/machine_learning/meta_learning_project/packages
run: |
  {env} python run_maml.py {args}
default_args:
  # experiment parameters
  log_directory: /mnt/slab/krypton/machine_learning/maml_debug_runs/{time:%Y-%m-%d}/goal-velocity/{time:%H%M%S.%f}/
#  env_name: "HalfCheetahGoalVel-v0"
  env_name: "HalfCheetah-v1"
  start_seed: 200
  render: false
  term_reward_threshold: -10000
  eval_plot_interval: 1 # "interval for plotting the loss"
  eval_save_interval: 10 # "interval for saving plot figure"
  # Training Parameters
  n_tasks: 1
  n_grad_steps: 0
  n_epochs: 2000
  n_parallel_envs: 8
  batch_timesteps: 128
  env_max_timesteps: 0
  # model parameters
  first_order: false
  inner_alg: PPO
  inner_optimizer: Adam
  beta: 0.03
  meta_alg: PPO
  meta_optimizer: Adam
  # Model Options (PPO)
  vf_coef: 0.5 # idea is to use this to reduce the update on the value function
  ent_coef: 0.0
  max_grad_norm: 0.5
  clip_range: 0.2
  # GAE parameters
  gamma: 0.99
  lam: 0.95
batch_args: # use good typing convention here
  - run_mode: maml
    no_state_dict: 1
    no_maml_gradient: 0
    no_task_reset: 1
    n_epochs: 2000
    n_tasks: 1
    n_grad_steps: 3 # start for 1
    eval_grad_steps:  "0"
    n_parallel_envs: 8
    batch_timesteps: 64
    # MAML params
    alpha: 0.5
    inner_alg: PPO
    inner_optimizer: SGD
    beta: 0.003
    meta_alg: PPO
    meta_optimizer: Adam
#  - run_mode: maml
#    no_state_dict: 1
#    no_maml_gradient: 1
#    no_task_resample: 1
#    n_epochs: 2000
#    n_tasks: 10
#    n_grad_steps: 1 # start for 1
#    eval_grad_steps:  "0 1"
#    n_parallel_envs: 8
#    batch_timesteps: 64
#    # MAML params
#    alpha: 0.5
#    inner_alg: PPO
#    inner_optimizer: SGD
#    beta: 0.005
#    meta_alg: PPO
#    meta_optimizer: Adam
